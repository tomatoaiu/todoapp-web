{"version":3,"sources":["reducers/taskReducer.ts","contexts/TaskContext.ts","pages/CommonViewer.tsx","pages/TodayViewer.tsx","layout/App.tsx","serviceWorker.ts","index.tsx"],"names":["omitDeep","require","reducer","state","action","taskid","v1","type","Object","objectSpread","defineProperty","concat","deadline","done","text","s","assign","Error","initialState","id1","Date","id2","id3","dispatch","payload","TaskContext","React","createContext","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","formControl","margin","spacing","minWidth","form","display","flexDirection","formControlLabel","marginTop","CommonViewer","classes","_useState","useState","_useState2","slicedToArray","checked","setChecked","_useContext","useContext","_React$useState","_React$useState2","showItems","setShowItems","_React$useState3","_React$useState4","taskId","setTaskId","alltasks","useMemo","entries","donetasks","filter","_ref","_ref2","notdonetasks","_ref3","_ref4","handleToggle","value","key","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","console","log","_React$useState5","_React$useState6","open","setOpen","_React$useState7","_React$useState8","openDeleteModal","setOpenDeleteModal","_useState3","_useState4","input","setInput","handleClose","Item","index","react_default","a","createElement","ListItem","role","undefined","dense","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","onClick","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","handleClickOpen","Edit_default","handleDeleteOpen","Delete_default","className","Button","variant","color","autoComplete","FormControl","InputLabel","htmlFor","Select","onChange","e","target","MenuItem","List","map","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","label","placeholder","InputLabelProps","shrink","DialogActions","Typography","gutterBottom","listSection","listStyleType","stickul","padding","taskli","TodayViewer","todayTask","now","year","getFullYear","month","getMonth","date","getDate","array","Array","fill","d","sort","b","ad","bd","getMinutes","forEach","task","getHours","_useState5","_useState6","tmeInput","setTimeInput","TodayItem","item","timeIndex","taskIndex","keys","pop","subheader","tasks","ListSubheader","length","defaultValue","App","useTheme","localStorage","JSON","parse","getItem","_React$useReducer","useReducer","_React$useReducer2","taskProps","useEffect","setItem","stringify","react_router_dom","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","menuButton","hide","Menu_default","noWrap","Drawer","drawer","anchor","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider","to","button","MoveToInbox_default","Mail_default","content","contentShift","Provider","Grid","container","alignItems","justify","xs","allTask","react_router","path","exact","component","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","mixins","toolbar","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","layout_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c55ffcf4.chunk.js","sourcesContent":["import { v1 } from 'uuid';\nimport { StateType, ActionType } from '../models/taskModels';\n\nconst omitDeep = require('omit-deep');\n\nexport function reducer(state: StateType, action: ActionType) {\n  const taskid = 'taskid' in action ? action.taskid : v1();\n  switch (action.type) {\n    case 'create':\n      return {\n        ...state,\n        [`${taskid}`]: {\n          deadline: action.deadline,\n          done: false,\n          text: ''\n        }\n      };\n    case 'delete': {\n      const s = Object.assign({}, state);\n      return omitDeep(s, [`${taskid}`]);\n    }\n    case 'update':\n      return {\n        ...state,\n        [`${taskid}`]: {\n          deadline: action.deadline,\n          done: action.done,\n          text: action.text\n        }\n      };\n    default:\n      throw new Error();\n  }\n}\n","import React from 'react';\nimport { TaskProps, ActionType } from '../models/taskModels';\n\nconst initialState: TaskProps = {\n  state: {\n    'id1': {\n      deadline: new Date(),\n      done: false,\n      text: 'text1',\n    },\n    'id2': {\n      deadline: new Date(),\n      done: false,\n      text: 'text2',\n    },\n    'id3': {\n      deadline: new Date(),\n      done: false,\n      text: 'text3',\n    },\n  },\n  dispatch: (payload: ActionType) => void {}\n};\n\nexport const TaskContext = React.createContext<TaskProps>(initialState);\n","import React, { useState, useContext, useMemo } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { TaskContext } from '../contexts/TaskContext';\nimport { TaskProps, Task } from '../models/taskModels';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content',\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1),\n    },\n  })\n);\n\nfunction CommonViewer() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([0]);\n  const { state, dispatch }: TaskProps = useContext(TaskContext);\n  const [showItems, setShowItems] = React.useState('all');\n  const [taskId, setTaskId] = React.useState('');\n\n  const alltasks = useMemo(() => {\n    return Object.entries(state);\n  }, [state]);\n\n  const donetasks = useMemo(() => {\n    return Object.entries(state).filter(([key, value]) => value.done);\n  }, [state]);\n\n  const notdonetasks = useMemo(() => {\n    return Object.entries(state).filter(([key, value]) => !value.done);\n  }, [state]);\n\n  const handleToggle = (value: number, key: string) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    console.log(state, key)\n\n    dispatch({\n      type: 'update',\n      taskid: key,\n      done: !state[key].done,\n      deadline: state[key].deadline,\n      text: state[key].text\n    });\n\n    setChecked(newChecked);\n    setTaskId(key);\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\n  const [input, setInput] = useState('');\n\n  function handleClickOpen(key: string) {\n    setTaskId(key);\n    setOpen(true);\n  }\n  function handleDeleteOpen(key: string) {\n    setTaskId(key);\n    setOpenDeleteModal(true);\n  }\n  function handleConfirm() {\n    console.log(taskId);\n    dispatch({\n      type: 'update',\n      taskid: taskId,\n      done: state[taskId].done,\n      deadline: state[taskId].deadline,\n      text: input\n    });\n    setOpen(false);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleDelete() {\n    console.log(taskId);\n    dispatch({\n      type: 'delete',\n      taskid: taskId\n    });\n    setOpenDeleteModal(false);\n  }\n  console.log(state)\n\n  function Item(key: string, value: Task, index: number) {\n    return (\n      <ListItem key={key} role={undefined} dense>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={value.done}\n            tabIndex={-1}\n            disableRipple\n            onClick={handleToggle(index, key)}\n          />\n        </ListItemIcon>\n        <ListItemText primary={`${value.text}`} />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"Edit\" onClick={() => handleClickOpen(key)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge=\"end\" aria-label=\"Edit\" onClick={() => handleDeleteOpen(key)}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button  variant=\"outlined\" color=\"inherit\" onClick={() => dispatch({\n        type: 'create',\n        deadline: new Date()\n      })}>新規ToDo作成</Button>\n\n      <form autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">表示方法</InputLabel>\n          <Select\n            value={showItems}\n            onChange={(e) => setShowItems(`${e.target.value}`)}\n          >\n            <MenuItem value={'all'}>全てのTodoを表示</MenuItem>\n            <MenuItem value={'done'}>完了したToDoを表示</MenuItem>\n            <MenuItem value={'notdone'}>未完了のToDoを表示</MenuItem>\n          </Select>\n        </FormControl>\n      </form>\n\n      <List className={classes.root}>\n        { showItems === 'all'\n          ? alltasks.map(([key, value], index) => (\n              Item(key, value, index)\n            ))\n          : showItems === 'done'\n            ? donetasks.map(([key, value], index) => (\n                Item(key, value, index)\n              ))\n            : notdonetasks.map(([key, value], index) => (\n                Item(key, value, index)\n              ))\n        }\n      </List>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">ToDo編集</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"ToDo名\"\n            placeholder=\"ToDo名\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={e => setInput(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            そのまま\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            完了\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={openDeleteModal}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">ToDoを削除</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            本当にToDoを削除しますか？\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDeleteModal(false)} color=\"primary\">\n            そのまま\n          </Button>\n          <Button onClick={handleDelete} color=\"primary\">\n            消去する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default CommonViewer;\n","import React, { useState, useContext, useMemo } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { TaskContext } from '../contexts/TaskContext';\nimport { TaskProps, Task, StateType } from '../models/taskModels';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content',\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1),\n    },\n    listSection: {\n      backgroundColor: 'inherit',\n      listStyleType: 'none'\n    },\n    stickul: {\n      backgroundColor: 'inherit',\n      listStyleType: 'none',\n      padding: 0,\n    },\n    taskli: {\n      listStyleType: 'none'\n    }\n  })\n);\n\nfunction TodayViewer() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([0]);\n  const { state, dispatch }: TaskProps = useContext(TaskContext);\n  const [taskId, setTaskId] = React.useState('');\n\n  const todayTask = useMemo(() => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = now.getMonth() + 1;\n    const date = now.getDate();\n\n    const array: StateType[][] = [...Array(24)].map(() => Array(1).fill([]));\n    console.log(array);\n\n    Object.entries(state)\n      .filter(([key, value]) => {\n        const d = new Date(value.deadline);\n        return (\n          d.getFullYear() === year\n          && (d.getMonth() + 1) === month\n          && d.getDate() === date\n        )\n      })\n      .sort((a, b) => {\n        const ad = new Date(`${a[1].deadline}`);\n        const bd = new Date(`${b[1].deadline}`);\n\n        return ad.getMinutes() - bd.getMinutes()\n      })\n      .forEach(([key, value]) => {\n        const d = new Date(value.deadline);\n        const task: StateType = {\n          [`${key}`]: value\n        }\n        array[d.getHours()].push(task);\n      });\n\n    return array;\n  }, [state]);\n\n\n  const handleToggle = (value: number, key: string) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    console.log(state, key)\n\n    dispatch({\n      type: 'update',\n      taskid: key,\n      done: !state[key].done,\n      deadline: state[key].deadline,\n      text: state[key].text\n    });\n\n    setChecked(newChecked);\n    setTaskId(key);\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\n  const [input, setInput] = useState('');\n  const [tmeInput, setTimeInput] = useState('');\n\n  function handleClickOpen(key: string) {\n    setTaskId(key);\n    setOpen(true);\n  }\n  function handleDeleteOpen(key: string) {\n    setTaskId(key);\n    setOpenDeleteModal(true);\n  }\n  function handleConfirm() {\n    console.log(taskId);\n    dispatch({\n      type: 'update',\n      taskid: taskId,\n      done: state[taskId].done,\n      deadline: new Date(tmeInput),\n      text: input\n    });\n    setOpen(false);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleDelete() {\n    console.log(taskId);\n    dispatch({\n      type: 'delete',\n      taskid: taskId\n    });\n    setOpenDeleteModal(false);\n  }\n  console.log(state)\n\n  function TodayItem(item: StateType, timeIndex: number, taskIndex: number) {\n    const key: string = `${Object.keys(item).pop()}`;\n    const value = item[key];\n    if (!value) return;\n\n    return (\n      <ListItem key={`${key}`} role={undefined} className={classes.taskli}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={value.done}\n            tabIndex={-1}\n            disableRipple\n            onClick={handleToggle(timeIndex, key)}\n          />\n        </ListItemIcon>\n        <ListItemText primary={`${value.text}`} />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"Edit\" onClick={() => handleClickOpen(key)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge=\"end\" aria-label=\"Edit\" onClick={() => handleDeleteOpen(key)}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button  variant=\"outlined\" color=\"inherit\" onClick={() => dispatch({\n        type: 'create',\n        deadline: new Date()\n      })}>新規ToDo作成</Button>\n\n      <List className={classes.root} subheader={<li />}>\n        {todayTask.map((tasks, timeIndex) => (\n          <li key={`section-${timeIndex}`} className={classes.listSection}>\n            <ul className={classes.stickul}>\n              <ListSubheader>{`${timeIndex}時`}</ListSubheader>\n              {tasks.filter(item => Object.keys(item).length > 0).map((item, taskIndex) => (\n                TodayItem(item, timeIndex, taskIndex)\n              ))}\n            </ul>\n          </li>\n        ))}\n      </List>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">ToDo編集</DialogTitle>\n        <DialogContent>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"ToDo名\"\n            placeholder=\"ToDo名\"\n            fullWidth\n            defaultValue={input}\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={e => setInput(e.target.value)}\n          />\n          <TextField\n            id=\"datetime-local\"\n            label=\"締め切り\"\n            type=\"datetime-local\"\n            defaultValue={new Date()}\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={e => setTimeInput(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            そのまま\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            完了\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={openDeleteModal}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">ToDoを削除</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            本当にToDoを削除しますか？\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDeleteModal(false)} color=\"primary\">\n            そのまま\n          </Button>\n          <Button onClick={handleDelete} color=\"primary\">\n            消去する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default TodayViewer;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { reducer } from '../reducers/taskReducer';\nimport CommonViewer from '../pages/CommonViewer';\nimport TodayViewer from '../pages/TodayViewer';\n\nimport { TaskContext } from '../contexts/TaskContext';\nimport { TaskProps, initialState } from '../models/taskModels';\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const tasks = 'tasks' in localStorage ? JSON.parse(`${localStorage.getItem('tasks')}`) : {};\n  const [state, dispatch] = React.useReducer(reducer, tasks);\n  const taskProps: TaskProps = { state, dispatch }\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(state));\n  }, [state]);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  const menuItems = ['common', 'today'];\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              ToDo App\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {menuItems.map((text, index) => (\n              <Link to={`/${text}/`}>\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <TaskContext.Provider value={taskProps}>\n            <Grid\n              container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item xs={12} className={classes.allTask}>\n                <Route path=\"/\" exact component={CommonViewer} />\n                <Route path=\"/common/\" component={CommonViewer} />\n                <Route path=\"/today/\" component={TodayViewer} />\n                {/* <TodayViewer></TodayViewer> */}\n              </Grid>\n            </Grid>\n          </TaskContext.Provider>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  allTask: {\n    width: '95%',\n    maxWidth: '350px'\n  }\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layout/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}